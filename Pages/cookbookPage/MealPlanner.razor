@inject HttpClient Http

<div class="mealplanner-box">

    <h2>@errorMessage</h2>

    <div class="howManyRecipesBox">
        <button @onclick="addRecipeToList">+</button>
        <button @onclick="removeRecipeFromList"></button>
    </div>

    <form @onsubmit="SubmitMealPlanner">
        <div class="AllRecipeInBox">
            @for(int i =0; i < recipeRequests.Count; i++){
                <RecipeRequestBoxComp RecipeRequest="recipeRequests[i]" />
            }
        </div>
        <button type="submit">Generate</button>
    </form>


    <div class="mealplan-box">
        @if (MealPlannedRecipes != null)
        {
            foreach (var recipe in MealPlannedRecipes)
            {
                <div class="recipe-card">
                    <h1>@recipe.RecipeName</h1>
                    <p>@recipe.Description</p>

                    <div class="ingredients">
                        <h2>Ingredients:</h2>
                        <ul>
                            @foreach (var ingredient in recipe.Ingredients)
                            {
                                <li>@ingredient.Name - @ingredient.Quantity @ingredient.Unit</li>
                            }
                        </ul>
                    </div>

                    <div class="instructions">
                        <h2>Cooking Instructions:</h2>
                        <ol>
                            @foreach (var step in recipe.Steps)
                            {
                                <li>@step</li>
                            }
                        </ol>
                    </div>

                    <div class="recipe-details">
                        <p>Cook Time: @recipe.CookTime minutes</p>
                        <p>Difficulty: @(recipe.Difficulty)</p>
                        <p>Times Cooked: @recipe.TimesCooked</p>
                        <p>Vegan: @recipe.IsVegan</p>
                        <p>Portions: @recipe.Portions</p>
                        <p>Recipe Type: @(recipe.RecipeType)</p>
                        <p>Spiciness: @(recipe.Spicyness)</p>
                    </div>
                </div>
            }

            <button>Generate shopping list</button>
        }
    </div>


</div>

@code {

    private string errorMessage = "";
    private List<Recipe>? MealPlannedRecipes;


    private List<RecipeRequestEasyDTO> recipeRequests = new List<RecipeRequestEasyDTO>()
    {
        new RecipeRequestEasyDTO()
    };

    private async void SubmitMealPlanner()
    {

        try
        {
            var response = await Http.PostAsJsonAsync("meal/easy", recipeRequests);
            if (!response.IsSuccessStatusCode)
            {
                //show error message
                errorMessage = "check console log for error message!";
                Console.WriteLine(response);
                return;
            }

            var recipes = await response.Content.ReadFromJsonAsync<List<Recipe>>();

            if(recipes.Count == 0)
            {
                errorMessage = "no recipies fit requirements!";
                return;
            }

            MealPlannedRecipes = recipes;
            errorMessage = "";
            StateHasChanged();


        }catch(Exception e)
        {
            Console.WriteLine(e.Message);
        }


    }

    private void addRecipeToList()
    {
        recipeRequests.Add(new RecipeRequestEasyDTO());
    }

    private void removeRecipeFromList()
    {
        recipeRequests.RemoveAt(recipeRequests.Count - 1);
    }

}
