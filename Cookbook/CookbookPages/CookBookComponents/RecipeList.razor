@using OrganizerBlazor.Cookbook.Models
@using System.Collections.Generic

<div class="recipe-box">

    @if (Recipes != null && Recipes.Count > 0)
    {
        <div class="recipe-list-box">
                @foreach (var recipe in Recipes)
                {
                    <div class="recipe-item">
                        <div class="recipe-header">
                            <h3>@recipe.RecipeName</h3>
                            <div class="time-box">
                                <span class="oi oi-clock" style="font-size: 20px;" aria-hidden="true"></span>
                                <span class="recipe-cook-time">@recipe.CookTime minutes</span>
                            </div>
                            <div class="difficulty-box" >
                                <span class="oi oi-star" style="font-size: 20px;" aria-hidden="true"></span>
                                <span class="recipe-difficulty">@recipe.Difficulty</span>
                            </div>
                            <div class="type-box">
                                <span class="oi oi-steam" aria-hidden="true"></span>
                                <span>@recipe.RecipeType</span>
                            </div>
                            <button @onclick="() => ToggleRecipeDetails(recipe)" class="recipe-expand-btn">
                                <p>see details</p>
                            </button>
                        </div>
                        <div class="recipe-details" style="display: @(IsDetailsVisible.ContainsKey(recipe) && IsDetailsVisible[recipe] ? "flex" : "none")">
                            <div class="desc-and-ingr-steps-box">
                                <div class="desc-box">
                                    <h3>Description</h3>
                                    <p>@recipe.Description</p>
                                    @if(recipe.Description == "")
                                    {
                                        <p>Description not set</p>
                                    }
                            </div>
                            
                                <div class="recipe-ingr-steps-box">
                                    <fieldset class="details-recipe-box">
                                        <legend>Ingredients</legend>
                                        <ul class="recipe-ingredients">
                                            @if (recipe.Ingredients.Count == 0)
                                            {
                                                <li>No Ingredients added!</li>
                                            }
                                            @foreach (var ingredient in recipe.Ingredients)
                                            {
                                                <li>@ingredient.Quantity @ingredient.Unit of @ingredient.Name</li>
                                            }
                                        </ul>
                                    </fieldset>
                                    <fieldset class="details-recipe-box">
                                        <legend>Steps</legend>
                                        <ul class="recipe-steps">
                                            @if(recipe.Steps.Count == 0)
                                            {
                                                <li>No steps added!</li>
                                            }
                                            @foreach (var step in recipe.Steps)
                                            {
                                                <li>@step</li>
                                            }
                                        </ul>
                                    </fieldset>
                                
                                </div>
                            </div>
                            <div class="Btn-box">

                                <button type="button" class="alterBtn removeBtn" @onclick="()=>RemoveRecipe(recipe)">
                                    <p>remove</p>
                                </button>
                                <button type="button" class="alterBtn updateBtn" @onclick="()=>SendRecipeToEdit(recipe)">
                                    <p>edit</p>
                                </button>
                            </div>

                        <!-- Add your recipe details content here -->
                        </div>
                    </div>
                }
            </div>
    }
    else
    {
        <p>No recipes found.</p>
    }
</div>

@code {
    [Parameter]
    public List<Recipe>? Recipes { get; set; }

    [Parameter]
    public Action<Recipe> OnRemoveRecipe { get; set; }

    [Parameter]
    public Action<Recipe> OnEditRecipe { get; set; }

    public void SendRecipeToEdit(Recipe recipe)
    {
        OnEditRecipe?.Invoke(recipe);
    }

    private Dictionary<Recipe, bool> IsDetailsVisible { get; set; } = new Dictionary<Recipe, bool>();

    protected override void OnInitialized()
    {
        base.OnInitialized();

        // Initialize all recipe details to false initially
        foreach (var recipe in Recipes)
        {
            IsDetailsVisible[recipe] = false;
        }
    }

    private void RemoveRecipe(Recipe recipe)
    {
        OnRemoveRecipe?.Invoke(recipe);
    }


    private void ToggleRecipeDetails(Recipe recipe)
    {
        if (IsDetailsVisible.ContainsKey(recipe))
        {
            IsDetailsVisible[recipe] = !IsDetailsVisible[recipe];
        }
        else
        {
            IsDetailsVisible[recipe] = true;
        }
    }
}
