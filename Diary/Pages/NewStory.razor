@page "/diary/add"
@using OrganizerBlazor.Diary.Models

<div class="container mt-4">
    <h1>Add a New Diary Story</h1>
    <hr />

    <form @onsubmit="AddDiaryItem">
        <div class="form-group">
            <label for="title">Title:</label>
            <input type="text" class="form-control" id="title" @bind="newDiaryItem.Title" required />
        </div>

        <div class="form-group">
            <label for="content">Content:</label>
            <textarea class="form-control" id="content" @bind="newDiaryItem.Content" rows="5" required></textarea>
        </div>
        <div class="form-group">
            <label for="cityInput">City:</label>
            <input type="text" class="form-control" id="cityInput" @bind="newDiaryItem.PublishedInTown">
        </div>
        <div class="form-group">
            <label for="countryInput">Country:</label>
            <input type="text" class="form-control" id="countryInput" @bind="newDiaryItem.PublishedInCountry">
        </div>

        <button type="submit" class="btn btn-primary">Add Story</button>
    </form>

    <div class="form-group">
        <label>How was your day?</label>
        <div class="star-rating">
            @for (int i = 1; i <= 5; i++)
            {
                var localI = i; // Capture the current value of i
                <span class="star" @onclick="() => RateDay(localI)">
                    @if (dayRating >= localI)
                    {
                        <i class="bi bi-star-fill"></i> <!-- Filled star -->
                    }
                    else
                    {
                        <i class="bi bi-star"></i> <!-- Empty star -->
                    }
                </span>
            }
        </div>
    </div>
</div>

@code {
    private DiaryPost newDiaryItem = new DiaryPost();

    private void AddDiaryItem()
    {
        // You can add the newDiaryItem to your list or database here
        // For this example, we'll add it to the list
        // diaryItems.Add(newDiaryItem);

        // Reset the form fields
        // newDiaryItem = new DiaryItem();

        // Redirect to the diary view page
        // NavigationManager.NavigateTo("/diary");

        var timestamp = CreateTimeStampOnCreate();
        Console.WriteLine(timestamp);
    }

    private string CreateTimeStampOnCreate()
    {
        // Get the current date and time
        DateTime now = DateTime.Now;

        // Create a timestamp string
        return now.ToString("yyyy - MM - dd HH: mm:ss");
    }


    // --- poll code ---

    private int dayRating = 0;

    private void RateDay(int rating)
    {
        Console.WriteLine("rating : " + rating);
        dayRating = rating;
    }
}
