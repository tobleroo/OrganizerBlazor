@using OrganizerBlazor.Cookbook.Models.CookBookDTO;
@using OrganizerBlazor.Cookbook.Models;


<div class="container mt-4 bg-white p-3">
    <div class="row">
        <!-- Portions Selector -->
        <div class="col-md-4 mb-3">
            <div class="input-group">
                <label class="input-group-text" for="portions">Portions:</label>
                <input type="number" class="form-control" id="portions" name="portions" min="1" max="100" @bind="RecipeRequest.Portions" @bind:event="oninput">
            </div>
        </div>

        <!-- Meal Type Selector -->
        <div class="col-md-4 mb-3">
            <div class="input-group">
                <label class="input-group-text" for="mealTypeSelect">Meal Type</label>
                <select class="form-select" id="mealTypeSelect" @onchange="HandleMealTypeChange">
                    @foreach (var mealType in MealTypes.Keys)
                    {
                        <option value="@mealType">@mealType</option>
                    }
                </select>
            </div>
        </div>

        <!-- Recipe Selector -->
        <div class="col-md-4 mb-3">
            <div class="input-group">
                <label class="input-group-text" for="recipeSelect">Select Dish</label>
                <select class="form-select" id="recipeSelect" @bind="RecipeRequest.Name" required>
                    <option value="">Select Dish</option>
                    @if (MealTypes.TryGetValue(selectedMealType, out var recipes))
                    {
                        foreach (var recipe in recipes)
                        {
                            <option value="@recipe.RecipeName">@recipe.RecipeName</option>
                        }
                    }
                </select>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public Dictionary<string, List<SpecificRecipeGen>> MealTypes { get; set; } = new();

    [Parameter]
    public SpecificRecipeRequest RecipeRequest { get; set; }

    private int selectedPortions = 1;
    private string selectedMealType;

    private void HandleMealTypeChange(ChangeEventArgs e)
    {
        selectedMealType = e.Value.ToString();
        // Do your additional logic here
        RecipeRequest.Name = "";
    }

    protected override void OnInitialized()
    {
        if (MealTypes != null && MealTypes.Count > 0)
        {
            selectedMealType = MealTypes.Keys.First();
        }
    }
}