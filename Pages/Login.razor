@page "/login"
@using System.Net.Http.Headers;
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ILocalStorageService LocalStorageService
@inject NavigationManager NavigationManager


<div class="login-box">
    <h1>Login</h1>


    @if (!waitingOnSignIn)
    {
        <p>@errorMessage</p>
        <form @onsubmit="HandleLogin">
            <label for="username">Name</label>
            <input id="username" type="text" @bind="username" />
            <label for="password">Password</label>
            <input id="password" type="password" @bind="password" />
            <button type="submit">Login</button>
        </form>
    }
    else
    {
        <div class="loading-box">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <h3>Signing in...</h3>
        </div>
    }

</div>

@code {
    private string username = "";
    private string password = "";
    private string errorMessage = "";
    private bool waitingOnSignIn = false;

    async Task HandleLogin(){

        waitingOnSignIn = true;

        var user = new UserLoginDto
        {
            Username = username,
            Password = password
        };

        //make http post 
        var response = await Http.PostAsJsonAsync("auth/login", user);
        if (!response.IsSuccessStatusCode)
        {
            //show error message
            errorMessage = "wrong username or password";
            waitingOnSignIn = false;
            StateHasChanged();
            return;
        }
        var token = await response.Content.ReadAsStringAsync();

        //save token to local storage
        await LocalStorageService.SetItemAsync("JwtToken", token);

        Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);

        //set auth state
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        //navigate to home page
        NavigationManager.NavigateTo("/");
    }

}